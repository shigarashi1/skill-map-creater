@startuml schema-diagram

frame BaseObject {
	' FirebaseBaseObject
	object FirebaseBase {
		createdAt: Firebase.timestamp
		updatedAt: Firebase.timestamp
		createdUser: Users.id
		updatedUser: Users.id
	}
	object ClientBase {
		id: Firebase.Doc.id
	}
}

package Domain {
	frame User {
		object Users {
			uid: FirebaseAuth.uid
			username: string;
			roll: string
		}
	}

	frame Group {
		object Groups {
			owner: Users.id
			name: string
			description: string
			members: Users.id[]
		}
	}

	frame Project { 
		object Projects {
			group: Groups.id
			name: string
			description: string
		}

		object ProjectMembers {
			project: Projects.id
			user: Users.id
			auth: ?
		}
	}

	frame Skill { 
		object SkillCategories {
			project: Projects.id
			name: string
			description: string
		}

		object SkillLevels {
			project: Projects.id
			order: number
			icon: string
			name: string
			description: string
		}

		object Skills {
			project: Projects.id
			category: SkillCategories.id
			name: string
			description: string
		}

		object SkillLebelDiscriptions {
			project: Projects.id
			lebel: SkillLevels.id
			skill: Skills.id
			description: string
		}

		object UserSkills {
			project: Projects.id
			user: Users.id
			skill: Skill.id
			isGrowth: boolean
			description: string
			lastUpdateAt: number
		}
	}
}

package ReduxStore {
	frame userFeature {
		object user {
			id: string
			uid: string
			username: string
		}
	}

	frame groupFeature {
		object ownerGroup {
			id: string
			groupMembers: Users[]
		}
		object belongedToGroup {
		}
	}

	frame projectFeature {
		object project {
			projects: Projects[]
		}
	}

	frame pageFeature {
		object homePage {

		}
		object groupPage {
			selectedGroup: Groups.id
			name: Groups.name
			members: Users[]
			description: string
			belongToGroups: Groups[]
		}
		object projectPage {
			selectedGroup: Groups.id
		}
		object skillPage {

		}
		object userSkillPage {

		}
		object userPage {

		}
	}

	frame dialogFeature {
		object dialog.group {
			isEdit: boolean
			hasOpen: boolean
			groupId: Groups.id
			name: string
			description: string
			members: Users[]
		}
		object dialog.project {
			isEdit: boolean
			hasOpen: boolean
			projectId: Projects.id
			name: string
			description: string
			isDuplicate: boolean
			baseProjectId: Projects.id
			projects: Projects[]
		}
	}
}

@enduml